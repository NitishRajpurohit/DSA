//Split Array Largest Sum
//https://leetcode.com/problems/split-array-largest-sum/
//Input: nums = [7,2,5,10,8], k = 2
Output: 18
Explanation: There are four ways to split nums into two subarrays.
The best way is to split it into [7,2,5] and [10,8], where the largest sum among the two subarrays is only 18.//

class Solution {
    public int splitArray(int[] nums, int k) {
        return(sumarray(nums,k));
    }
    static int sumarray(int[] nums,int k){
        int start=0;
        int end=0;
        for(int i =0; i<nums.length; i++){
            start=Math.max(start,nums[i]);// in the end of the loop will contain the max item from the array
            end+=nums[i];
            }
        // binary search
        while(start<end){
            int mid=start+(end-start)/2;
            //calculate how many peices you can divide this in with the max sum
            int sum=0;
            int peices=1;
            for(int num:nums){
                if(sum+num>mid){
                    //create a new array
                    sum=num;
                    peices++;
                }else{
                    sum+=num;
                }
            }
            if(peices>k){
                start=mid+1;
            }else{
                end=mid;
            }
        }
    return end; //or start because here start==end
  }
}
